{"ast":null,"code":"var _jsxFileName = \"D:\\\\tejaskp project\\\\data analysis\\\\frontend\\\\src\\\\components\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction Upload({\n  onUploadSuccess\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // Check file extension\n    const fileExt = file.name.split('.').pop().toLowerCase();\n    if (!['csv', 'xlsx', 'xls'].includes(fileExt)) {\n      setError('Only CSV and Excel files are supported');\n      return;\n    }\n    setIsUploading(true);\n    setUploadProgress(0);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      // Upload file\n      const response = await axios.post(`${API_URL}/upload_excel`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        }\n      });\n\n      // Get schema after successful upload\n      const schemaResponse = await axios.get(`${API_URL}/schema`);\n      setIsUploading(false);\n      onUploadSuccess(schemaResponse.data, response.data.table_name);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setIsUploading(false);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Error uploading file. Please try again.');\n      console.error('Upload error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Your Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an Excel or CSV file to start analyzing with natural language queries\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file\",\n            onChange: handleFileChange,\n            className: \"file-input\",\n            accept: \".csv,.xlsx,.xls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file\",\n            className: \"file-label\",\n            children: file ? file.name : 'Choose a file'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", (file.size / 1024 / 1024).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), isUploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [uploadProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"upload-button\",\n          children: \"Upload and Process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Supported Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"CSV (.csv)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Excel (.xlsx, .xls)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note\",\n          children: \"Note: Large files (50,000+ rows) may take a moment to process\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"3rWxuR7TRJFzAKfFRLHDQ4mp68Q=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","Upload","onUploadSuccess","_s","file","setFile","isUploading","setIsUploading","error","setError","uploadProgress","setUploadProgress","handleFileChange","e","selectedFile","target","files","handleSubmit","preventDefault","fileExt","name","split","pop","toLowerCase","includes","formData","FormData","append","response","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","schemaResponse","get","data","table_name","err","_err$response","_err$response$data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","onChange","accept","htmlFor","size","toFixed","style","width","_c","$RefreshReg$"],"sources":["D:/tejaskp project/data analysis/frontend/src/components/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Upload.css';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nfunction Upload({ onUploadSuccess }) {\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n    setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!file) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // Check file extension\n    const fileExt = file.name.split('.').pop().toLowerCase();\n    if (!['csv', 'xlsx', 'xls'].includes(fileExt)) {\n      setError('Only CSV and Excel files are supported');\n      return;\n    }\n\n    setIsUploading(true);\n    setUploadProgress(0);\n    \n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      // Upload file\n      const response = await axios.post(`${API_URL}/upload_excel`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setUploadProgress(percentCompleted);\n        },\n      });\n\n      // Get schema after successful upload\n      const schemaResponse = await axios.get(`${API_URL}/schema`);\n      \n      setIsUploading(false);\n      onUploadSuccess(schemaResponse.data, response.data.table_name);\n    } catch (err) {\n      setIsUploading(false);\n      setError(err.response?.data?.error || 'Error uploading file. Please try again.');\n      console.error('Upload error:', err);\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <div className=\"upload-card\">\n        <h2>Upload Your Data</h2>\n        <p>Upload an Excel or CSV file to start analyzing with natural language queries</p>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"file-input-container\">\n            <input\n              type=\"file\"\n              id=\"file\"\n              onChange={handleFileChange}\n              className=\"file-input\"\n              accept=\".csv,.xlsx,.xls\"\n            />\n            <label htmlFor=\"file\" className=\"file-label\">\n              {file ? file.name : 'Choose a file'}\n            </label>\n          </div>\n          \n          {file && (\n            <div className=\"file-info\">\n              <p>File: {file.name}</p>\n              <p>Size: {(file.size / 1024 / 1024).toFixed(2)} MB</p>\n            </div>\n          )}\n          \n          {error && <div className=\"error-message\">{error}</div>}\n          \n          {isUploading ? (\n            <div className=\"progress-container\">\n              <div \n                className=\"progress-bar\" \n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n              <span>{uploadProgress}%</span>\n            </div>\n          ) : (\n            <button type=\"submit\" className=\"upload-button\">\n              Upload and Process\n            </button>\n          )}\n        </form>\n        \n        <div className=\"upload-info\">\n          <h3>Supported Files</h3>\n          <ul>\n            <li>CSV (.csv)</li>\n            <li>Excel (.xlsx, .xls)</li>\n          </ul>\n          <p className=\"note\">Note: Large files (50,000+ rows) may take a moment to process</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Upload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}